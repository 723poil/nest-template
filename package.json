{
  "name": "nest-template",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "npm run prisma:build && npm run start:dev",
    "start:dev": "npx dotenv -e local.env -- cross-env MODE=local PORT=3008 LOG_DIR=logs/ nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint:fix": "eslint --fix",
    "lint": "eslint",
    "prettier": "prettier --write \"{src,apps,libs,test}/**/*.ts\" --config ./.prettierrc",
    "test:local": "./script/test.sh local",
    "test:dev": "./script/test.sh dev",
    "test:watch": "cross-env MODE=local LOG_DIR=logs/ jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "cross-env MODE=local LOG_DIR=logs/ jest --detectOpenHandles --forceExit --runInBand",
    "prisma:pull": "ts-node prisma/generate.db.schema.js && npx dotenv -e local.env -- npx prisma db pull --schema=prisma/db.schema.prisma",
    "prisma:generate": "npx prisma generate --schema=prisma/db.schema.prisma",
    "prisma:build": "npm run prisma:pull && npm run prisma:generate",
    "prisma:migrate:test": "npx dotenv -e test.env -- npx prisma migrate dev --name init --schema=prisma/db.schema.prisma && npx dotenv -e test.env -- npx prisma migrate deploy",
    "prisma:test": "npm run prisma:pull && npm run prisma:migrate:test",
    "jest:clear": "jest --clearCache"
  },
  "dependencies": {
    "@nestjs/axios": "^4.0.0",
    "@nestjs/common": "^11.0.16",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.16",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.0.16",
    "@nestjs/schedule": "^5.0.1",
    "@nestjs/swagger": "^11.1.2",
    "@prisma/client": "^6.6.0",
    "@types/cls-hooked": "^4.3.9",
    "@types/crypto-js": "^4.2.2",
    "@types/lodash": "^4.17.16",
    "@types/multer": "^1.4.12",
    "@types/passport-jwt": "^4.0.1",
    "@types/qrcode": "^1.5.5",
    "@types/tmp": "^0.2.6",
    "@willsoto/nestjs-prometheus": "^6.0.2",
    "axios": "^1.8.4",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "cls-hooked": "^4.2.2",
    "cross-env": "^7.0.3",
    "crypto-js": "^4.2.0",
    "dotenv": "^16.5.0",
    "dotenv-cli": "^8.0.0",
    "exceljs": "^4.4.0",
    "express-basic-auth": "^1.2.1",
    "firebase-admin": "^13.2.0",
    "google-auth-library": "^9.15.1",
    "iconv-lite": "^0.6.3",
    "jsonwebtoken": "^9.0.2",
    "jwks-rsa": "^3.2.0",
    "jwt-decode": "^4.0.0",
    "kysely": "^0.27.6",
    "lodash": "^4.17.21",
    "mysql2": "^3.14.0",
    "nest-winston": "^1.10.2",
    "otplib": "^12.0.1",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "prisma": "^6.6.0",
    "prisma-extension-kysely": "^3.0.0",
    "prisma-kysely": "^1.8.0",
    "prom-client": "^15.1.3",
    "qrcode": "^1.5.4",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "socket.io-client": "^4.8.1",
    "swagger-themes": "^1.4.3",
    "tmp": "^0.2.3",
    "uuid": "^11.1.0",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@nestjs/cli": "^11.0.6",
    "@nestjs/schematics": "^11.0.5",
    "@nestjs/testing": "^11.0.16",
    "@types/express": "^5.0.1",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.14.1",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^8.29.1",
    "@typescript-eslint/parser": "^8.29.1",
    "eslint": "^9.24.0",
    "eslint-config-prettier": "^10.1.2",
    "eslint-plugin-prettier": "^5.2.6",
    "jest": "^29.7.0",
    "prettier": "^3.5.3",
    "source-map-support": "^0.5.21",
    "supertest": "^7.1.0",
    "ts-jest": "^29.3.1",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.8.3"
  },
  "jest": {
    "moduleDirectories": [
      "node_modules",
      "<rootDir>/src"
    ],
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "./",
    "testRegex": ".spec.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "preset": "ts-jest",
    "moduleNameMapper": {
      "^src/(.*)$": "<rootDir>/src/$1"
    },
    "globalSetup": "<rootDir>/test/global.setup.ts"
  }
}
